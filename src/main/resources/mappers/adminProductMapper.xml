<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="proj21_shop.mapper.admin.product.AdminProductMapper">

 <!-- PRODUCT -->
	<resultMap id="adminProductResult" type="ProductDTO" >
	
		<result property="proNum" column="pro_num" />
		<result property="proName" column="pro_name" />
		<result property="proPrice" column="pro_price" />
		
		<result property="proSalesrate" column="pro_salesrate" />
		<result property="proCategory" column="pro_category" />
		<result property="proStatus" column="pro_status" />
		
		<result property="proImgfileName" column="pro_imageFileName" />
		<result property="proCreDate" column="pro_cre_date" />
		<result property="proContent" column="pro_content" />
		
		<result property="proSize" column="pro_size" />
		<result property="proColor" column="pro_color" />
		<result property="proQuantity" column="pro_quantity" />
		<result property="proHits" column="pro_hits" />
		<result property="proSold" column="pro_sold" />
		 
	</resultMap>
	
 	 <resultMap id="productImgResult" type="ProductImageDTO">
	
		<result property="proImgCode" column="pro_img_code" />
		<result property="proNum" column="pro_num" />
		<result property="proImagefilename" column="pro_imagefilename" />
		<result property="proImgState" column="pro_img_state" />
		
	</resultMap>
	
	<update id="updateProduct2">
		UPDATE
			product
		<set>
			pro_quantity =pro_quantity+#{change_orderProQuantity},
			pro_sold =pro_sold-1,
		</set>	
		WHERE
			pro_num = #{change_proNum}	
	</update>	
	
		
	<delete id="deleteProducts" parameterType="map">
		delete from product
		<where>
		    pro_num IN
		    <foreach item="proNum" collection="deleteList" open="(" close=")" separator=",">
		            #{proNum}
		    </foreach>
		</where>
	</delete>
	
	<update id="updateProduct">
		update product
		<set>
			pro_quantity=pro_quantity+#{proQuantity}
		</set>
		 where pro_num = #{proNum}
	</update>
	
	<!-- 제품 추가 -->
	<insert id="insertNewProduct" parameterType="Map">
				insert into product 
					   (pro_num, pro_category, pro_name, pro_price, pro_content, pro_salesrate, pro_status
					   , pro_color, pro_size, pro_quantity)
				values
					   (#{proNum}, #{proCategory}, #{proName}, #{proPrice}, #{proContent}, #{proSalesrate}, #{proStatus}
					   , #{proColor}, #{proSize}, #{proQuantity})
		<!-- 제품 번호를 리턴값으로 받아오기 -->
	</insert>
	
	<!-- 제품 이미지 추가 -->
	<insert id="insertProductImageFile" parameterType="map">
		 insert into pro_img (pro_num, pro_imageFileName, pro_img_state)
		 values
		<foreach item="item" collection="list" separator=" ," >
			 (#{item.proNum}, #{item.proImagefilename}, #{item.proImgState})
		</foreach>
	</insert>
	
	<!-- 총 제품 수 -->
	<select id="selectTotalProducts" resultType="int" >
			select count(pro_num) from product	
	</select>
	<!-- 신상품 -->
	<select id="selectNewProducts" resultType="int" >
			select count(pro_num) from product	where pro_status='신상'
	</select>
	<!-- 판매량이 많은 제품 -->
	<select id="selectBestProducts" resultType="int" >
			select count(pro_num) from product	where pro_status='최고'
	</select>
	<!-- 세일중인 제품 -->
	<select id="selectOffProducts" resultType="int" >
			select count(pro_num) from product	where pro_status='세일'
	</select>
	<!-- 추천상품 -->
	<select id="selectSteadyProducts" resultType="int" >
			select count(pro_num) from product	where pro_status='추천'
	</select>
	<!-- 판매 중지된 상품 -->
	<select id="selectOutProducts" resultType="int" >
			select count(pro_num) from product	where pro_status='품절'	
	</select>
	
	<!-- 조건 별 제품 리스트 뽑아오기 -->
	<!-- 메인 리스트에 뿌려줄 것들 검색, 제품목로, 페이징 등 -->
	<select id="selectAllProducts" resultMap="adminProductResult">
		SELECT a.*
  		  FROM (SELECT @ROWNUM := @ROWNUM+1 AS rn ,b.*,c.pro_imagefilename
		          FROM ( SELECT @ROWNUM :=0 ) R, product b JOIN pro_img c ON b.pro_num = c.pro_num
		         WHERE c.pro_img_state=1
		<if test="proCategory !=null and !proCategory.equals('')">
					   AND b.pro_category=#{proCategory}
		</if>
		<if test="proStatus !=null and !proStatus.equals('') ">
					   AND b.pro_status=#{proStatus}
		</if>
		<if test="keyword !=null and !keyword.equals('')">
					   AND b.pro_name LIKE CONCAT('%',#{keyword},'%')
		</if>
					 ORDER BY
		<if test="orderPrice !=null and !orderPrice.equals('')">
			<choose>
				<when test="orderPrice.equals('price_desc')">
					b.pro_price DESC ,
				</when>
				<when test="orderPrice.equals('price_asc')">
					b.pro_price ASC ,
				</when>
			</choose>
		</if>
		<if test="orderSalesrate !=null and !orderSalesrate.equals('')">
			<choose>
				<when test="orderSalesrate.equals('salesRate_desc')">
					b.pro_salesrate DESC ,
				</when>
				<when test="orderSalesrate.equals('salesRate_asc')">
					b.pro_salesrate ASC ,
				</when>
			</choose>
		</if>
		<if test="orderHits !=null and !orderHits.equals('')">
			<choose>
				<when test="orderHits.equals('hits_desc')">
					b.pro_hits DESC ,
				</when>
				<when test="orderHits.equals('hits_asc')">
					b.pro_hits ASC ,
				</when>
			</choose>
		</if>
					b.pro_num)a
		 WHERE rn
		 	BETWEEN
		 	(#{section,jdbcType=NUMERIC}-1)*200+(#{pageNum,jdbcType=NUMERIC}-1)*20+1
			AND
		 	(#{section,jdbcType=NUMERIC}-1)*200+#{pageNum,jdbcType=NUMERIC}*20
	</select>
	
	<!-- 검색한 제품 수 -->
	<select id="selectedTotalProducts" resultType="int" parameterType="map">
		SELECT count(pro_num)
		  FROM product
		 WHERE pro_num >0
	    <if test="proCategory !=null and !proCategory.equals('')">
			AND pro_category=#{proCategory}        
	    </if>
	    <if test="proStatus !=null and !proStatus.equals('') ">
			AND pro_status=#{proStatus}        
	    </if>
	    <if test="keyword !=null and !keyword.equals('')">
	        AND pro_name like CONCAT('%',#{keyword},'%')
	    </if>
	</select>
	
	<!-- 주문한 제품수 -->
	<select id="selectOrderedTotal" parameterType="map" resultType="int">
		select count(*) from product  
		<choose>
			<when test="keyword !=null and !keyword.equals('')">
				where pro_name like CONCAT('%',#{keyword},'%')
			</when>
		</choose>
		<choose>
			<when test="proStatus !=null and !proStatus.equals('') and keyword !=null and !keyword.equals('')">
				and pro_status=#{proStatus}  
			</when>
			
			<when test="proStatus !=null and !proStatus.equals('') and keyword ==null and keyword.equals('')">
				where pro_status=#{proStatus}  
			</when>
		</choose>
		<choose>
			<when test="proCategory !=null and !proCategory.equals('') and keyword !=null and !keyword.equals('') and proStatus !=null and !proStatus.equals('')">
				and pro_category=#{proCategory}   
			</when>
			<when test="proCategory !=null and !proCategory.equals('') and keyword ==null and keyword.equals('') and proStatus ==null and proStatus.equals('')">
				where pro_category=#{proCategory}  
			</when>
		</choose>
	</select>
	
	<select id="selectAllTShirts" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 1
	</select>
	<select id="selectAllLongT" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 2
	</select>
	<select id="selectAllslvless" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 3
	</select>
	<select id="selectAllhood" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 4
	</select>
	<select id="selectAllShirts" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 5
	</select>
	<select id="selectAllSweater" resultType="int" parameterType="String">
		select count(DISTINCT SUBSTR(pro_num,1,3))
  		  from product
 		 where pro_category = 6
	</select>
	
</mapper>